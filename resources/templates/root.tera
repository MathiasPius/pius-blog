{% import "macros.tera" as blog %}
<!DOCTYPE html>
<html>
<head lang="en">
	{% block meta %}
		<meta charset="utf-8">
	{% endblock meta %}
	{% block style %}
		{% include "style.tera" %}
		{% include "highlighter.tera" %}
	{% endblock style %}
	<title>{% block title %}Title Goes Here{% endblock title %}</title>
</head>
<body>
	<header>
		<div class="boxed">
			<nav>
				{% block breadcrumb %}
				<a href="/">Home</a>
				{% endblock breadcrumb %}
				<a href="https://github.com/MathiasPius" class="external"><img src="/static/github.png" /></a>
				<a href="https://www.linkedin.com/in/mathias-pius/" class="external"><img src="/static/linkedin.png" /></a>
			</nav>
		</div>
	</header>
	<main class="boxed">
		<svg width="100" height="32" id="memory_usage">
		{% for measurement in stats.memory_used %}
			<line x1="{{ 100 - loop.index }}" y1="32" x2="{{ 100 - loop.index }}" y2="{{ 32 - (measurement / stats.max_memory) * 32 }}" />
		{% endfor %}
		</svg>
		<svg width="100" height="32" id="load_average">
		{% for measurement in stats.load_average %}
			{% if measurement >= 1 %}
			<line x1="{{ 100 - loop.index }}" y1="32" x2="{{ 100 - loop.index }}" y2="32" style="stroke: rgba(255,100,100,.2);"/>
			{% else %}
			<line x1="{{ 100 - loop.index }}" y1="32" x2="{{ 100 - loop.index }}" y2="{{ 32 - measurement * 32 }}" />
			{% endif %}
		{% endfor %}
		</svg>

		{% block content %}

		{% endblock content %}
	</main>
	<footer></footer>
</body>
</html>